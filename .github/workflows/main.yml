name: Contrast Security Pipeline
env:
  CONTRAST__API__ORGANIZATION_ID: d651f7d1-59c2-46f0-a180-025ab1027891
  CONTRAST__API__URL: https://eval.contrastsecurity.com/Contrast
   #For Scan:
  CONTRAST_PROJECT_ID: c96fab3b-1b19-42b7-a13c-e9a08787d8ac
   #For Assess/OSS:
  CONTRAST_APPLICATION_ID: 13b8391d-a504-478c-938a-1a8593d2cdae

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  contrast-oss-scan:
    name: Run Contrast OSS Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    permissions:
      security-events: write
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Install Contrast CLI
        run: npm install & npm install -g @contrast/contrast-cli
        
      - name: Upload and Scan File
        run: contrast-cli --report --fail --cve_severity high --cve_threshold 0 --api_key ${{ secrets.CONTRAST__API__API_KEY }} --authorization ${{ secrets.CONTRAST_AUTHORIZATION_HEADER }} --organization_id $CONTRAST__API__ORGANIZATION_ID --host $CONTRAST__API__URL --application_id $CONTRAST_APPLICATION_ID --language JAVA
        
  contrast-static-scan:
    name: Run Contrast Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    permissions:
      security-events: write
    steps:
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: temurin

      - uses: actions/checkout@v2
      - uses: gradle/gradle-build-action@v2.0.0
      
      - name: Create Binary
        run: ./gradlew clean jar
        
      - name: Execute Contrast Scan
        uses: Contrast-Security-OSS/contrastscan-action@v1.0.0
        with:
          # artifact to scan
          artifact: ./build/libs/terracotta-bank-servlet-0.0.1-SNAPSHOT.jar
          # The api url of the Contrast Platform.
          api_url: $CONTRAST__API__URL
          # The path in which to save the SARIF results.
          sarif: contrast-scan-results.sarif.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONTRAST__API__USER_NAME: "<user name>"
          CONTRAST__API__ORGANIZATION_ID: $CONTRAST__API__ORGANIZATION_ID
          CONTRAST__API__SERVICE_KEY: ${{ secrets.CONTRAST__API__SERVICE_KEY }}
          CONTRAST__API__API_KEY: ${{ secrets.CONTRAST__API__API_KEY }}
          
      - id: scanhistory
        name: Obtain Scan Id
        run: echo "::set-output name=scan-meta::$(curl -v --fail --location -H "API-KEY:${{ secrets.CONTRAST__API__API_KEY }}" -H "Authorization:${{ secrets.CONTRAST_AUTHORIZATION_HEADER }}" $CONTRAST__API__URL/api/sast/organizations/$CONTRAST__API__ORGANIZATION_ID/projects/$CONTRAST_PROJECT_ID/scans?page=0&size=1&sort=createdTime%2Cdesc)"

      - name: Download Scan Results (Sarif)
        run: echo ${{ steps.scanhistory.outputs.scan-meta }} && curl --fail --location -H "API-KEY:${{ secrets.CONTRAST__API__API_KEY }}" -H "Authorization:${{ secrets.CONTRAST_AUTHORIZATION_HEADER }}" $CONTRAST__API__URL/api/sast/organizations/$CONTRAST__API__ORGANIZATION_ID/projects/$CONTRAST_PROJECT_ID/scans/$CONTRAST_SCAN_ID/raw-output -o contrast-scan-results.sarif.json
        env:
          CONTRAST_SCAN_ID: ${{fromJson(steps.scanhistory.outputs.scan-meta).content[0].id}}
          
      #- name: Upload Scan Results to Github (Optional)
      #  uses: github/codeql-action/upload-sarif@v1
      #  with:
      #    sarif_file: contrast-scan-results.sarif.json
          
  contrast-assess:
    name: Run Tests with Contrast Assess
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     - uses: actions/checkout@v2
     - uses: gradle/gradle-build-action@v2.0.0
     - name: Setup Firefox
       uses: browser-actions/setup-firefox@v0.0.0

     #This step is optional, the agent may already be inside of the container.
     - name: Download agent
       run: curl --fail --silent --location "https://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.contrastsecurity&a=contrast-agent&v=LATEST" -o contrast.jar

     - name: Gradle Build Action 
       run: ./gradlew cleanTest test
       env:
         CONTRAST__API__USER_NAME: ${{ secrets.CONTRAST__API__USER_NAME }}
         CONTRAST__API__API_KEY: ${{ secrets.CONTRAST__API__API_KEY }}
         CONTRAST__API__SERVICE_KEY: ${{ secrets.CONTRAST__API__SERVICE_KEY }}
